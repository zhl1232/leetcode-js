(window.webpackJsonp=window.webpackJsonp||[]).push([[1571],{1929:function(t,a,s){"use strict";s.r(a);var e=s(44),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"最大二叉树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最大二叉树"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode-cn.com/problems/maximum-binary-tree/",target:"_blank",rel:"noopener noreferrer"}},[t._v("最大二叉树"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("难度：Medium")]),t._v(" "),s("li",[t._v("标签：栈, 树, 数组, 分治, 二叉树, 单调栈")])]),t._v(" "),s("h2",{attrs:{id:"刷题思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#刷题思路"}},[t._v("#")]),t._v(" 刷题思路")]),t._v(" "),s("ul",[s("li",[t._v("[ ] xx")]),t._v(" "),s("li",[t._v("[ ] xx")])]),t._v(" "),s("h3",{attrs:{id:"方法-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-1"}},[t._v("#")]),t._v(" 方法 1")]),t._v(" "),s("ul",[s("li",[t._v("复杂度：\n"),s("ul",[s("li",[t._v("时间 O()")]),t._v(" "),s("li",[t._v("空间 O()")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n")])])]),s("h3",{attrs:{id:"方法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-2"}},[t._v("#")]),t._v(" 方法 2")]),t._v(" "),s("ul",[s("li",[t._v("复杂度：\n"),s("ul",[s("li",[t._v("时间 O()")]),t._v(" "),s("li",[t._v("空间 O()")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);