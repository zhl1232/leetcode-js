(window.webpackJsonp=window.webpackJsonp||[]).push([[1940],{2298:function(a,t,r){"use strict";r.r(t);var e=r(44),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"二叉树的垂序遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的垂序遍历"}},[a._v("#")]),a._v(" "),r("a",{attrs:{href:"https://leetcode-cn.com/problems/vertical-order-traversal-of-a-binary-tree/",target:"_blank",rel:"noopener noreferrer"}},[a._v("二叉树的垂序遍历"),r("OutboundLink")],1)]),a._v(" "),r("ul",[r("li",[a._v("难度：Hard")]),a._v(" "),r("li",[a._v("标签：树, 深度优先搜索, 广度优先搜索, 哈希表, 二叉树")])]),a._v(" "),r("h2",{attrs:{id:"刷题思路"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#刷题思路"}},[a._v("#")]),a._v(" 刷题思路")]),a._v(" "),r("ul",[r("li",[a._v("[ ] xx")]),a._v(" "),r("li",[a._v("[ ] xx")])]),a._v(" "),r("h3",{attrs:{id:"方法-1"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方法-1"}},[a._v("#")]),a._v(" 方法 1")]),a._v(" "),r("ul",[r("li",[a._v("复杂度：\n"),r("ul",[r("li",[a._v("时间 O()")]),a._v(" "),r("li",[a._v("空间 O()")])])])]),a._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[a._v("\n")])])]),r("h3",{attrs:{id:"方法-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方法-2"}},[a._v("#")]),a._v(" 方法 2")]),a._v(" "),r("ul",[r("li",[a._v("复杂度：\n"),r("ul",[r("li",[a._v("时间 O()")]),a._v(" "),r("li",[a._v("空间 O()")])])])]),a._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[a._v("\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);