(window.webpackJsonp=window.webpackJsonp||[]).push([[899],{1257:function(t,e,a){"use strict";a.r(e);var r=a(44),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"实现trie-前缀树-ii"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现trie-前缀树-ii"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://leetcode-cn.com/problems/implement-trie-ii-prefix-tree/",target:"_blank",rel:"noopener noreferrer"}},[t._v("实现Trie（前缀树）II"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("难度：Medium")]),t._v(" "),a("li",[t._v("标签：设计, 字典树, 哈希表, 字符串")])]),t._v(" "),a("h2",{attrs:{id:"刷题思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#刷题思路"}},[t._v("#")]),t._v(" 刷题思路")]),t._v(" "),a("ul",[a("li",[t._v("[ ] xx")]),t._v(" "),a("li",[t._v("[ ] xx")])]),t._v(" "),a("h3",{attrs:{id:"方法-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法-1"}},[t._v("#")]),t._v(" 方法 1")]),t._v(" "),a("ul",[a("li",[t._v("复杂度：\n"),a("ul",[a("li",[t._v("时间 O()")]),t._v(" "),a("li",[t._v("空间 O()")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n")])])]),a("h3",{attrs:{id:"方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法-2"}},[t._v("#")]),t._v(" 方法 2")]),t._v(" "),a("ul",[a("li",[t._v("复杂度：\n"),a("ul",[a("li",[t._v("时间 O()")]),t._v(" "),a("li",[t._v("空间 O()")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);