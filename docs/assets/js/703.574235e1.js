(window.webpackJsonp=window.webpackJsonp||[]).push([[703],{1061:function(t,a,e){"use strict";e.r(a);var s=e(44),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"设计带解析函数的表达式树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计带解析函数的表达式树"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://leetcode-cn.com/problems/design-an-expression-tree-with-evaluate-function/",target:"_blank",rel:"noopener noreferrer"}},[t._v("设计带解析函数的表达式树"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("难度：Medium")]),t._v(" "),e("li",[t._v("标签：栈, 树, 设计, 数学, 二叉树")])]),t._v(" "),e("h2",{attrs:{id:"刷题思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#刷题思路"}},[t._v("#")]),t._v(" 刷题思路")]),t._v(" "),e("ul",[e("li",[t._v("[ ] xx")]),t._v(" "),e("li",[t._v("[ ] xx")])]),t._v(" "),e("h3",{attrs:{id:"方法-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法-1"}},[t._v("#")]),t._v(" 方法 1")]),t._v(" "),e("ul",[e("li",[t._v("复杂度：\n"),e("ul",[e("li",[t._v("时间 O()")]),t._v(" "),e("li",[t._v("空间 O()")])])])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("\n")])])]),e("h3",{attrs:{id:"方法-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法-2"}},[t._v("#")]),t._v(" 方法 2")]),t._v(" "),e("ul",[e("li",[t._v("复杂度：\n"),e("ul",[e("li",[t._v("时间 O()")]),t._v(" "),e("li",[t._v("空间 O()")])])])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);